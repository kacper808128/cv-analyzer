# Plik konfiguracyjny GitHub Actions CI/CD
name: CV Analyzer CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        pip install flake8
        # Zatrzymaj build tylko przy krytycznych błędach
        flake8 backend/app --count --select=E9,F63,F7,F82 --show-source --statistics
        # Wyświetl wszystkie ostrzeżenia, ale nie zatrzymuj builda
        flake8 backend/app --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
        
  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build and test Docker Compose
      run: |
        docker compose build
        docker compose up -d
        sleep 10
        docker compose ps
        curl -s http://localhost:8000/health | grep "ok"
        docker compose down
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to production
      run: |
        echo "Wdrażanie do środowiska produkcyjnego..."
        # Tutaj należy dodać kroki wdrożenia do produkcji
        # np. ssh na serwer, pull najnowszej wersji, restart kontenerów
        echo "Wdrożenie zakończone pomyślnie"
